
params {

modules_to_run='all'

resultfolder=''
runfolder=''

ETL_dockeruri="dkr.ecr.ap-southeast-1.amazonaws.com/10x_etl:latest"

cellranger_RNAreference='s3://proteona-cellranger/references/GRCh38-3.0.0/'
cellranger_VDJreference='s3://proteona-cellranger/references/refdata-cellranger-vdj-GRCh38-alts-ensembl-5.0.0/'
cellranger_ADTreference='s3://proteona-cellranger/feature_bc/Totalseq.Ab.Barcodes_Oct2022.csv'
cellranger_introns='True'


cellranger_cpus = 32
cellranger_memory = 256.GB
cellranger_dockeruri = "dkr.ecr.ap-southeast-1.amazonaws.com/cellranger-nf:latest"
//work_dir has to be an absolute path, or cellranger can't find the reference genome. 
//Can just put any path since it will be created at runtime and a UUID will be added to ensure uniqueness
cellranger_workdir='/mnt/10x_endtoend_pipeline/test_workdir/'
cellranger_local_RNA_reference='false' //Provide full path to reference on local drive during testing to avoid wasting time downloading reference
cellranger_local_VDJ_reference='false' //Provide full path to reference on local drive during testing to avoid wasting time downloading reference
cellranger_testcpu='NA'
cellranger_testmemory='NA'



makeseurat_cpus=2
makeseurat_memory=16.GB
seurat_dockeruri = "dkr.ecr.ap-southeast-1.amazonaws.com/10x_seurat:latest"
mapcell_bmjci=false
mapcell_bmcite=false
mapcell_bmcite_RNA=false
mapcell_bmcite_RNA_overlappingADT=false
mapcell_pbmc=false
mapcell_pbmc_RNA=true
mapcell_pbmc_RNA_overlappingADT=false
WNN_PBMC=false
WNN_BM=false

mergeseurat_cpus=4
mergeseurat_memory=32.GB

QC_cpus=4
QC_memory=32.GB
QC_dockeruri = "dkr.ecr.ap-southeast-1.amazonaws.com/10x_qc:latest"


QCDB_pid=''
QCDB_testmode=0
QCDB_mergedmetrics=''
QCDB_skip=0

}	

profiles {
	batch {
	  process.executor = 'awsbatch'
    process.queue = "gwf_nextflow"
	  aws.region = 'ap-southeast-1'
	}

	docker{
		docker.enabled=true
		docker.sudo=true
		docker.runOptions='-v /home/ubuntu/.aws:/root/.aws'
	}
    
}


process {
   maxRetries = 0
   shell = ['/bin/bash', '-eou', 'pipefail']
   
   
    withName:create_librarycsv {
   container= params.ETL_dockeruri
   	cpus = 1
   	memory = 1.GB
   }
   
    withName:create_listparametercsv {
   container= params.ETL_dockeruri
   	cpus = 1
   	memory = 1.GB
   }  
  
   withName:cellranger_multi {
   errorStrategy='ignore'
   container= params.cellranger_dockeruri
   	cpus = params.cellranger_cpus
   	memory = params.cellranger_memory
   }
   
   withName:check_cellranger {   
   //executor='local'
   container= 'dkr.ecr.ap-southeast-1.amazonaws.com/10x_etl'
   	cpus = 1
   	memory = 1.GB
   }

   withName:parse_S3 {
   container= params.ETL_dockeruri
   	cpus = 1
   	memory = 1.GB
   }

  withName:make_seuratobjs {
   container= params.seurat_dockeruri
   	cpus = params.makeseurat_cpus
   	memory = params.makeseurat_memory
   }

  withName:merge_seuratobjs {
   container= params.QC_dockeruri   	
   	cpus = { params.mergeseurat_cpus * task.attempt }
    memory = { params.mergeseurat_memory * task.attempt }    
    errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    maxRetries = 2
   }
   
   withName:merge_metrics {
  container= params.ETL_dockeruri
   	cpus = 1
   	memory = 1.GB
   }

  withName:perform_QC {
   container= params.QC_dockeruri
   	cpus = params.QC_cpus
   	memory = params.QC_memory
   }
   
  withName:QCDB {
  container= params.ETL_dockeruri
   	cpus = 1
   	memory = 1.GB
   }


}
